% a language with booleans and boolean operators

bool  : type.
true  : bool.
false : bool.

expr : type.
boolE : bool -> expr.
andE : expr -> expr -> expr.
orE : expr -> expr -> expr.

diff : bool -> bool -> type.
diff_tf : diff true false.
diff_ft : diff false true.
%mode diff +B +B'.
%query 1 1 diff true false.
%query 0 * diff true true.

and : expr -> expr -> expr -> type.
%mode and +E' +E'' -E.
and_tt : and (boolE true)  (boolE true)  (boolE true).
and_tf : and (boolE true)  (boolE false) (boolE false).
and_ft : and (boolE false) (boolE true)  (boolE false).
and_ff : and (boolE false) (boolE false) (boolE false).

or : expr -> expr -> expr -> type.
%mode or +E' +E'' -E.
or_tt : (or (boolE true)  (boolE true))  (boolE true).
or_tf : (or (boolE true)  (boolE false)) (boolE true).
or_ft : (or (boolE false) (boolE true))  (boolE true).
or_ff : (or (boolE false) (boolE false)) (boolE false).


eval2 : (expr -> expr -> expr) -> expr.
eval_wat : eval2 (F E' E'') E
            <- eval2 E'  (boolE B')
            <- eval2 E'' (boolE B'').

eval : expr -> expr -> type.
%mode eval +E -E'.

eval_primitive : eval (boolE B) (boolE B).

eval_and : eval (andE E' E'') B
            <- eval E' (boolE B')
            <- eval E'' (boolE B'')
            <- and (boolE B') (boolE B'') B.

eval_or : eval (orE E' E'') B
            <- eval E' (boolE B')
            <- eval E'' (boolE B'')
            <- or (boolE B') (boolE B'') B.

%query 1 1 eval (orE (andE (boolE true) (boolE false)) (boolE true)) E.
