nat : type.
z : nat.
succ : nat -> nat.

plus : nat -> nat -> nat -> type.
plus_z : plus z Y Y.
plus_s : plus (succ X) Y (succ Z) <- plus X Y Z.

%query 1 1 plus z z R.
%query 1 1 plus z (succ z) R.
%query 1 1 plus (succ z) (succ z) R.

minus : nat -> nat -> nat -> type.
minus_s : plus X Y Z -> minus Z Y X.

%query 1 1 minus z z R.
%query 0 * minus z (succ z) R.
%query 1 1 minus (succ z) (succ z) R.

greater : nat -> nat -> nat -> type.
greater_z : greater (succ N) z (succ N).
greater_s : greater (succ N) (succ M) (succ N) <- greater N M N.

% prod : nat -> nat -> nat -> type.
% prod_z : prod z _ z.
% prod_one : prod X (succ z) X.
% prod_s : prod X Y Z
%          <- prod X (succ (succ z)) (plus X X).

% 2 * 4:
%                 2        4 - 1        2 + 2
%                 2        3 - 1        4 + 2
%                 2        2 - 1        6 + 2
